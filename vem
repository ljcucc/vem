#!/usr/bin/env python3
import sys
import os
from os import path
# import argparse
# from argparse import RawTextHelpFormatter

from mpu.command import CmdInfo, Command, CommandManager

from mpu.cmds.init import InitCommand
from mpu.cmds.pkg import PkgCommand
from mpu.cmds.info import InfoCommand
from mpu.cmds.rm import RemoveCommand
from mpu.controllers.args_controller import ArgsController

def disp_help():
  description = ("""
usage:
  vem <command> [...options]

Available commands:
""")

  for cmd in command_list.cmds:
    description += "  " + (cmd.info.title_help()) + "\n"
  
  return description


command_list = CommandManager([
  Command(CmdInfo("help", "display help")),
  InitCommand(),
  InfoCommand(),
  RemoveCommand(),
  PkgCommand(),
  Command(CmdInfo("config", "udpate or read config to or from VM instance"))
])

def main():
  global command_list

  ac = ArgsController()

  if(not ac.isValidCmd()):
    print(disp_help())
    exit(0)

  # TODO: Move this code into CommandManager
  func_name = ac.command_head()

  if(command_list.indexOf(func_name) == -1):
    print(f"command \"{func_name}\" not found")
    print(disp_help())
    exit(1)
  
  command_list.exec(func_name, args = ac.down_level())

  # todo end -----------------

if __name__ == "__main__":
  main()
else:
  print("Do not run this program without main")
  exit(1)